<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.playground.admin_page.main.order.dao.OrderMapper">
    <resultMap id="orderResultMap" type="com.playground.admin_page.main.order.dto.order.OrderDto">
        <id property="orderId" column="order_id"/>
        <result property="userId" column="user_id"/>
        <result property="orderDate" column="order_date"/>
        <result property="orderStatus" column="order_status"/>
        <result property="totalPrice" column="total_price"/>
    </resultMap>
    <select id="findAllOrder" resultMap = "orderResultMap">
       select * from orders;
    </select>
<!---->
    <select id="findByStatus" resultMap = "orderResultMap">
        select *
        from orders
        where order_status = #{status};
    </select>


    <resultMap id="productDetailMap" type="com.playground.admin_page.main.order.dto.order.OrderDetailDto">
        <id property="orderId" column="order_id"/>
        <result property="userId" column="user_id"/>
        <result property="orderDate" column="order_date"/>
        <result property="orderStatus" column="order_status"/>
        <result property="totalPrice" column="total_price"/>
        <collection property="products" ofType="com.playground.admin_page.main.order.dto.order.ProductDetailDto">
            <id property="orderProductId" column="order_product_id"/>
            <result property="orderId" column="order_id"/>
            <result property="productId" column="product_id"/>
            <result property="quantity" column="quantity"/>
            <result property="productName" column="product_name"/>
            <result property="productPrice" column="price"/>
        </collection>
    </resultMap>
    <select id = "productDetail" resultMap = "productDetailMap">
        select o.*, op.*,p.product_name,p.price
        from orders o join order_product op
        on o.order_id= op.order_id
        join product p
        on p.product_id  = op.product_id
        where op.order_id=#{orderId}
    </select>

    <resultMap id="informationProductDetailMap" type="com.playground.admin_page.main.order.dto.order.OrderDetailDto">
    <id property="orderId" column="order_id"/>
    <result property="userId" column="user_id"/>
    <result property="orderDate" column="order_date"/>
    <result property="orderStatus" column="order_status"/>
    <result property="totalPrice" column="total_price"/>
    <collection property="products" ofType="com.playground.admin_page.main.order.dto.order.ProductDetailDto">
        <id property="orderProductId" column="order_product_id"/>
        <result property="orderId" column="order_id"/>
        <result property="productId" column="product_id"/>
        <result property="quantity" column="quantity"/>
        <result property="productName" column="product_name"/>
        <result property="productPrice" column="price"/>
        <result property="productPrice" column="price"/>
        <result property="amount" column="amount"/>
    </collection>
</resultMap>

    <select id = "informationProductDetail" resultMap = "informationProductDetailMap">
        select o.*, op.*,p.product_name,p.price, p.amount
        from orders o join order_product op
        on o.order_id= op.order_id
        join product p
        on p.product_id  = op.product_id
        where op.order_id=#{orderId}
    </select>

    <update id = "statusChange">
        update orders
        set order_status ='주문취소'
        where order_id = #{orderId}
    </update>

<!--    insert into order_cancel-->
<!--    values(1,-->
<!--    (select order_id from orders where order_status = 'canceled'),'처리중','2024-02-01');-->



    <resultMap id="findByOrderId" type="com.playground.admin_page.main.order.dto.order.OrderDto">
        <id property="orderId" column="order_id"/>
        <result property="userId" column="user_id"/>
        <result property="orderDate" column="order_date"/>
        <result property="orderStatus" column="order_status"/>
        <result property="totalPrice" column="total_price"/>
    </resultMap>

    <select id = "findByOrderId" resultMap = "findByOrderId">
        select * from orders where order_id = #{orderId}
    </select>

    <insert id="insertCancel">
        Insert into order_cancel(cancel_id,cancel_reason,order_id,process_status,cancel_date)
        values(0,'재고부족',#{orderId},'처리완료',NOW());
    </insert>


    <resultMap id="allCancelOrder" type="com.playground.admin_page.main.order.dto.order.CancelDto">
        <id property="cancelId" column="cancel_id"/>
        <result property="cancelReason" column="cancel_reason"/>
        <result property="orderId" column="order_id"/>
        <result property="processStatus" column="process_status"/>
        <result property="cancelDate" column="cancel_date"/>
    </resultMap>

    <select id = "cancelInformation">
       select * from order_cancel
    </select>

    <select id = "getSales" resultType ="java.lang.Integer">
        select SUM(total_price)
        from orders
        where order_status='배송완료';
    </select>

    <select id = "getOrderCount" resultType ="java.lang.Integer">
        select count(*)
        from orders
        where order_status='배송완료';
    </select>


    <resultMap id="findCompleteDetailsMaps" type="com.playground.admin_page.main.order.dto.order.OrderDetailDto">
    <id property="orderId" column="order_id"/>
    <result property="userId" column="user_id"/>
    <result property="orderDate" column="order_date"/>
    <result property="orderStatus" column="order_status"/>
    <result property="totalPrice" column="total_price"/>
    <association property="products" javaType="com.playground.admin_page.main.order.dto.order.ProductDetailDto">
        <id property="orderProductId" column="order_product_id"/>
        <result property="orderId" column="order_id"/>
        <result property="productId" column="product_id"/>
        <result property="quantity" column="quantity"/>
        <result property="productName" column="product_name"/>
        <result property="productPrice" column="price"/>
    </association>
    </resultMap>
    <select id = "findComplete" resultMap = "findCompleteDetailsMaps">
    select o.*, op.*,p.product_name,p.price
    from orders o join order_product op
    on o.order_id= op.order_id
    join product p
    on p.product_id  = op.product_id
    where order_status ='배송완료';
    </select>


<select id = "getCategoryList">
    SELECT
    category
    FROM
    orders o
    JOIN order_product op ON o.order_id = op.order_id
    JOIN product p ON p.product_id = op.product_id
    WHERE
    o.order_status = '배송완료'
    group by category
    order by category;
</select>

<select id = "getCountByCategory">
    SELECT
    count(*)
    FROM
    orders o
    JOIN order_product op ON o.order_id = op.order_id
    JOIN product p ON p.product_id = op.product_id
    WHERE
    o.order_status = '배송완료'
    group by category
    order by category;
</select>

<select id = "getPetList">
    SELECT user_pet
    FROM orders o
    join user u on o.user_id = u.user_id
    JOIN order_product op ON o.order_id = op.order_id
    JOIN product p ON p.product_id = op.product_id
    WHERE o.order_status = '배송완료'
    group by user_pet
    order by user_pet;
</select>

<select id = "getCountByUserPet">
    SELECT
    count(*)
    FROM orders o
    join user u on o.user_id = u.user_id
    JOIN order_product op ON o.order_id = op.order_id
    JOIN product p ON p.product_id = op.product_id
    WHERE o.order_status = '배송완료'
    group by user_pet
    order by user_pet;
</select>

    <select id="getKindStatus">
        select order_status
        from orders
        group by order_status
        order by order_status
    </select>

    <select id = "getCountStatus">
        select count(order_status)
        from orders
        group by order_status
        order by order_status;
    </select>



<select id="sumByYear" resultType="SumByYearDto">
    SELECT
    year,
    SUM(total_price) OVER (ORDER BY year ROWS UNBOUNDED PRECEDING) AS total_price
    FROM (
    SELECT
    YEAR(order_date) AS year,
    SUM(total_price) AS total_price
    FROM
    orders
    WHERE
    order_status = '배송완료'
    GROUP BY
    YEAR(order_date)
    ) AS yearly_totals
    ORDER BY
    year;
</select>

<update id = "changeProductAmount">
    UPDATE product p
    JOIN (
    SELECT
    p.product_id,
    op.quantity
    FROM
    orders o
    JOIN order_product op ON o.order_id = op.order_id
    JOIN product p ON p.product_id = op.product_id
    WHERE
    o.order_id = #{orderId}
    ) od ON p.product_id = od.product_id
    SET p.amount = p.amount + od.quantity;
</update>

</mapper>